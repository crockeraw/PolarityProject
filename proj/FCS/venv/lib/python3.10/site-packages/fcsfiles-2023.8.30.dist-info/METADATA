Metadata-Version: 2.1
Name: fcsfiles
Version: 2023.8.30
Summary: Read fluorescence correlation spectroscopy (FCS) data files
Home-page: https://www.cgohlke.com
Author: Christoph Gohlke
Author-email: cgohlke@cgohlke.com
License: BSD
Project-URL: Bug Tracker, https://github.com/cgohlke/fcsfiles/issues
Project-URL: Source Code, https://github.com/cgohlke/fcsfiles
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: numpy

Read fluorescence correlation spectroscopy (FCS) data files
===========================================================

Fcsfiles is a Python library to read Carl Zeiss(r) ConfoCor(r) RAW and ASCII
measurement data files.

:Author: `Christoph Gohlke <https://www.cgohlke.com>`_
:License: BSD 3-Clause
:Version: 2023.8.30

Quickstart
----------

Install the fcsfiles package and all dependencies from the
`Python Package Index <https://pypi.org/project/fcsfiles/>`_::

    python -m pip install -U fcsfiles

See `Examples`_ for using the programming interface.

Source code and support are available on
`GitHub <https://github.com/cgohlke/fcsfiles>`_.

Requirements
------------

This revision was tested with the following requirements and dependencies
(other versions may work):

- `CPython <https://www.python.org>`_ 3.9.13, 3.10.11, 3.11.5, 3.12rc, 64-bit
- `NumPy <https://pypi.org/project/numpy/>`_ 1.25.2

Revisions
---------

2023.8.30

- Fix linting issues.
- Add py.typed marker.
- Convert to Google style docstrings.
- Drop support for Python 3.8 and numpy < 1.22 (NEP29).

2022.9.28

- Update metadata.

2022.2.2

- Add type hints.
- Use float64 or int64 for ConfoCor3Fcs arrays.
- Drop support for Python 3.7 and numpy < 1.19 (NEP29).

2021.6.6

- Remove support for Python 3.6 (NEP 29).

2020.9.18

- Relax ConfoCor3Raw header requirement.
- Support os.PathLike file names.

2020.1.1

- Remove support for Python 2.7 and 3.5.

Notes
-----

"Carl Zeiss" and "ConfoCor" are registered trademarks of Carl Zeiss, Inc.

The use of this implementation may be subject to patent or license
restrictions.

The API is not stable yet and is expected to change between revisions.

This module does *not* read flow cytometry standard FCS files.

Examples
--------

Read the CountRateArray from a ConfoCor3 ASCII file as a numpy array:

>>> fcs = ConfoCor3Fcs('ConfoCor3.fcs')
>>> fcs['FcsData']['FcsEntry'][0]['FcsDataSet']['CountRateArray'].shape
(60000, 2)
>>> print(fcs)  # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
Carl Zeiss ConfoCor3 - measurement data file - version 3.0 ANSI
BEGIN FcsData 30000
        Name = Fluorescein
        Comment =
        AverageFlags = Repeat|Position|Average_Fit_Results
        SortOrder = Channel-Repeat-Position-Kinetics
        BEGIN FcsEntry1 10000
...

Read data and metadata from a ConfoCor3 RAW file:

>>> fcs = ConfoCor3Raw('ConfoCor3.raw')
>>> fcs.filename
'f5ee4f36488fca2f89cb6b8626111006_R1_P1_K1_Ch1.raw'
>>> fcs.frequency
20000000
>>> times = fcs.asarray()
>>> times[10858]
1199925494
>>> times, bincounts = fcs.asarray(bins=1000)
>>> times.shape
(1000,)
>>> bincounts[618]
23
>>> fcs.close()

Read data and metadata from a ConfoCor2 RAW file:

>>> fcs = ConfoCor2Raw('ConfoCor2.raw')
>>> fcs.frequency
20000000
>>> ch0, ch1 = fcs.asarray()
>>> ch1[4812432]
999999833
>>> times, ch0, ch1 = fcs.asarray(bins=1000)
>>> times.shape
(1000,)
>>> ch1[428]
10095
>>> fcs.close()
